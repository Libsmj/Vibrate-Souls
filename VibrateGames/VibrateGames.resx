<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AACNoo//mayZ/5irmf+WqZj/na6X/4WdlP9RcXn/NEpF/zRGPf9abmT/nK6e/7HBrv+vv63/rL2r/6++
        rf+0wbH/t8Oz/7fEtP+ywrH/scGw/66+rf+nuqf/sMOv/2N1Y/8/UUP/TFpK/4uXhf+ywrH/qbmn/6m5
        qP+nuaj/pLal/5esmP+Xq5b/mKuY/5eplf+UrJ3/X4OM/zNGQf9GX17/TWxy/z1WV/88UEn/d4uA/56u
        nv+svKr/rb2r/7G/rv+0wbH/sL6u/7TEs/+tvq3/rL2r/6a5pv+vw67/an1p/zpMPv9JV0X/gYx3/7PC
        r/+ouKb/qbmn/6a4p/+jtaT/lqmW/5eql/+Xqpf/mayX/32Xlf83Tk//PU5A/2WEhf9khon/UGlr/z9V
        Vf8zS03/Gyog/4mWif/Bz77/rr+t/7HBsf+Qn5H/jJ6N/7HDsv+nuaj/prmm/67Brf9rfmr/MkY0/0NU
        QP9yf2r/sL6q/6S2pP+kt6b/pLal/6O1pP+Up5T/lqmW/5aplv+Yq5j/b4WA/zdLSP9DV0r/T2JY/0FP
        Q/8zQTb/KDcv/yc3Lv8qPDH/PEg//2RvZP+mt6j/uMm6/6OypP9TZVT/YnRj/4yejf+SpZH/qLyl/3aK
        df89UUH/Q1dK/2h7bf+uvar/qLmo/6a5qf+ltab/o7Ki/5Gkkf+TppP/lKeU/5ismP9XaF//NUdE/z9Q
        Qv80Qzb/IC4i/zE/Mf8vPC//NUM2/yQvJf8cJRv/Eh4S/zpIPP9nd2r/qriq/5anmf9VZ1n/Z3hq/4ib
        iP+fsp3/c4h1/zlKOf82SDn/TGFS/3WKfv9xh3j/an9v/2BxY/+ZqZn/j6OQ/5Ckkf+SppP/lqqX/0VU
        Tv8iMSv/Lj0x/yQyJv86ST3/Okg9/ys1LP8eJR3/GiIX/yk0J/8eKBv/GCIW/xgjFv9ASz3/ND84/ys7
        Nv82Rz3/RVdK/2t+cP9VaFv/JzYj/ys5Jv82ST//aHln/4qejP+NoI7/lqiU/5+xnv+NoY7/jqKP/5So
        lP+Bk4b/OEZF/xwqJv8ZJx3/HSsf/zI/NP8iKyL/ExgP/xUcEP8cJRj/Fh8R/yUvIv8hKx7/ICod/xgh
        Ff8UIBf/PE5I/yY0K/8iNCj/TmJZ/1lvaf86UU//N0pC/z9WV/9OYF3/orao/6Gzo/+dsJ7/mq2a/4me
        i/+Kn4z/kqeT/2N1a/89T0j/QFNH/zxNQP88Sz//FiET/x4nHP82Rjv/YXpy/zpIQP8oNiv/GiMU/xch
        FP8WIRX/DxkM/x0qHf9Zb2n/NkY8/xwrHv8bKx7/NkxI/0FXVv8vPzj/MUQ9/2yEhv9pe3P/laiY/5ap
        lv+UqJX/hZ2G/4KZg/+PpZH/Xm9g/yc1KP9EU0T/Okg4/zVDMv8gKhf/GCAS/1twYv+Ksrn/b5il/5q9
        wf87UU//KjUr/xokF/8RHA//Iiwf/zpIOv8mNyf/FCMV/xooGP8wQDX/NUU9/zFAN/8rOjH/b4R+/3eK
        iP+HnI3/kaWS/4+ij/9genb/g5uD/32Pef8lMiH/ISwc/x4pGP8sOCf/PEs+/z9PRP9PYFb/iJ6K/3eM
        fv95l4//lbKv/36jq/9wi47/XnRy/y86L/8iKR7/W25k/zFDNv8ZKBr/HCob/yw6Lf8zQTP/KTUn/zE9
        L/9LYVv/e4yH/4GVg/+OoY7/i56L/z1XWP9whn//S1pH/w4aCf8oNCP/JjEg/zA9Lf9ednL/iaer/4ac
        kf+FmYb/i52M/4maiP+El4T/iZ6L/3yRhP+durP/SFhP/0BJQf+71dD/SFhS/zdMRf87UUr/UWFV/zVB
        Mv8+STr/NEI0/z9SUP9mdnD/h5yJ/4mcif+Hmoj/KDUu/z9OTv8mMCf/GB4M/ygyJP8jLR7/IisZ/0hc
        VP+AmpT/g5eB/4aZhv+EloX/hZiH/4ibiP+Knon/jJ+K/42fi/9ugHD/kaee/6O6sf9rg3n/dJOK/3aZ
        lP9XaWD/MTwu/0lcTv9JYFb/f5eR/42ekf+Im4n/hpmG/4WYhf8cIxn/GCAT/yUuI/8vOjD/RVRN/y46
        Lf8qMib/RFZS/3iPif9/kID/eYx9/4eai/+Gl4r/iJmJ/4iaiP+PopD/kaOS/5Gkk/+Ln4z/hpmH/5Cj
        kf+LoIz/lKmb/5Olof9whof/KTkz/z1IPf+Vq5j/g5aD/4OWhP+ClYL/gpWC/xEXDP8XHhL/Fh4S/y86
        L/8tOCv/HCQT/zhIOv+Nr7b/XnRm/zVAMv8tRTn/TGRX/zdBNv9PX1H/QlJC/z9OPv9oeGj/gpWF/4ib
        iv+Lnoz/ipyK/4qdif+Km4f/jZ6M/6CypP9DUUT/JC4k/46gj/+AlID/gZSB/4CTgP9/kn//DhYL/xUd
        E/8RGg7/HSQV/yEpGP8eJhX/KDUn/1ZubP8xRDr/JDEm/w4XDf8xQzf/FyEX/x4qHv8iLyP/Gy0c/0Va
        Sf92kYj/f5WE/4iZhf+GmYb/h5uF/4Wag/+Dl4H/jZ2I/01cS/8bJx3/hJeG/4KVfv+Bkn7/fpJ9/32Q
        fP8OFgv/DxcN/yEpHv8sNyj/MT0t/ys2Jv9GU0T/QkxG/yQuKv9CVUv/GSQa/xwnHf8uPTL/IzAk/zxQ
        Qv8wQjL/MUIs/1VpV/9fdmv/eo+B/4OXhv+El4P/jpmN/36Qe/+LnIj/Xmxa/xolGf98jn3/gJR9/4CS
        fP9+knz/fZF7/w0VCv8PFgr/JS4i/zA6Kv8zPSz/JzAg/z1HOv9KVk//QU9L/zZGPf80QTf/EBgO/yg2
        Kf88UEL/VnJi/0FVSv8nNSL/Lz0g/zM/KP9TY1L/gpaF/36Re/+Qko//hI+C/4aXgf9seWb/Higb/3aI
        eP+AlX7/fpF6/36Se/99kXr/EhgM/xIYC/8mLyL/ISoc/xwmGP8mMib/KTYq/ys1LP8RFg7/Fh4X/1di
        Wf8WIBT/GCIU/yEuHv8tPC3/Umpg/1dvX/82Qy7/N0Mu/zVALP9ebFr/f5J5/4+Ujv+Kk4j/f493/3iD
        b/8fKBj/b4Ft/4GYfv98kXr/fZJ5/3yReP8LEQf/ERcL/xwkF/8rOy7/O0xA/zE6K/83Rzf/VGth/2aC
        ev95j4v/KjMn/yIrG/8jKxr/ICkY/x8nFf8lMB3/XHFe/3qSf/96i3n/U2NQ/0ZVQv99kXn/h5CF/42T
        i/96inL/fot5/yUyJ/9fdGX/fpV6/32Sef99knn/eo92/ykzI/8iKxz/KTQj/ykzIf8zPCj/IicT/x4p
        Ff9YcWn/kbi6/7jRzf8iKBr/GyQR/yozH/8mLxn/KjQe/yMqF/8yPCf/VWVQ/6C1pf9qfmz/SVxH/3uN
        df9+i3r/kpSR/3qLc/9db2D/OlBH/2iEgf+XqJj/eY50/36Tev96j3b/JSsY/xoeDf8jJxL/O0Ip/0xV
        O/9LVj3/QlM9/1lzZv97m5b/pLas/xkfDv8hKRf/PUYy/ygyHP8sNyH/KzYd/zdFLv9EVEP/ZXhq/1xx
        YP9ieWf/d4lw/4iRg/+UmpH/d4hu/0hYQ/8tOh7/P0Yt/4eUgv97jnb/fY92/3yPdv8dIxD/KC0Y/ygu
        GP8/Ry//VV5E/0pTOf9HVj//aYF0/4+tqP9kcGD/GB0K/y0zIP86RC7/KDMd/yw1H/81QSv/RllI/1Fn
        Wv9rhHr/cY6H/3aLef91hmz/hoyC/5GVj/91hm3/fIt6/5qmlv+Bjnn/doZw/3yOd/97jnX/fI92/y0y
        Hv82PCP/Mjcf/zhBJ/9HUDb/QEow/0NPNv9jd2f/hZ+T/zc+K/8rLxv/OkAs/zA4If8jLBL/SVdE/1hv
        Y/+DmZP/sMzR/6nM0v+CmIr/dYRr/3eIb/92g3D/c4Bt/3mKcf+AkXj/eot0/3+SfP99kHn/e453/3uP
        dv97j3b/Ky4Y/zg+Jf84PiX/Rk41/09YP/9BSjL/Q047/05bS/8/SDj/ISQQ/y80H/83PSj/T1xF/1Jj
        Tv+XtLP/psbP/87b3P+nta3/fZJ//3OEaf91hm3/c4Zt/3WIbv95jHP/fI92/3yPdv99kXf/e5B3/3yR
        eP97kHf/eo92/3qOdf8sMBj/Njsi/09cQv9lc1v/Ym5Y/zI9KP9JW0f/O0c3/xcXCP8tMh7/KS4Z/ysy
        Hf9qeWT/cYVy/32Sg/99kYX/eId1/3KBaP9wgWb/dYJx/5KWkP94iXL/d4px/3yPdv9/knn/gZR7/4GU
        e/99knn/fJF4/3uQd/96kHf/eY10/y4xG/80OiL/SFQ8/15uWP9JVUD/QE86/0lZRP8gIxH/JCYT/ysu
        Gv8pLBX/Qkk0/218Zv9sfmf/b4Bo/3GBZv9xgWj/cYJq/4eOhf+enp7/g4uA/3WJb/95jHP/fZB3/4KV
        fP+Dln3/gJN6/32Sef98kXj/e5B3/3qOdf93inH/JioW/zU8Jv9GUz3/Tl5H/1VmT/9KWEL/MTUg/yIi
        Dv8pKhX/NTcg/zM1G/9UXEr/cIFs/22AZ/9xhW3/eIZ0/4qRh/+TlZL/j5OO/3KCbf9zh23/d4px/3iL
        cv96jXT/fI92/36ReP+Ak3r/e5B3/3qOdf95jXT/d4px/3OEa/84Pyv/OkMt/0hXQP9KWEL/TVtF/zU7
        J/8rLxj/KiwW/z1BMP89QCn/Oz4n/1ljUv9ufWj/bYFn/2x9av+RkpH/kZqP/3uGd/9wg2n/coZs/3SH
        bv91iG//d4px/3iLcv91iG//dYhv/3aJcP91h27/c4Rr/3ODa/9xgmr/bHtj/y0uGf84PSj/TVhC/ztD
        Lf8qLRj/IiMO/y0uHf9cZlj/c4F4/1tlU/9FSzP/XWhV/2l5Yv9sf2b/bYFo/2t+Zv9rgGb/bYJn/3GF
        bP9yhW3/coZt/3SIcP92iXH/dYlw/3GEa/9vgmn/boFo/219Zf9re2P/a3hg/2p3Xv9pdl3/MzQg/zs9
        Kf88PSn/Li8b/zQ3I/9PXUf/Y3Vi/2+AbP97jXv/d4l2/3iIdv9se2f/aHph/2x/Zv9vgmn/b4Rr/26E
        a/9ug2v/b4Rr/3GGbf9xhm7/coZu/3SIcf9zh3D/b4Jp/2x/Zv9rfmX/bHxk/2t6Yv9qd13/aHVa/2l0
        Wv9XYk//TlRD/0VKOP9VX07/bH5q/3CFbf9pe2P/ZHde/2JzWv9neGH/aHhh/2l5Yv9rfmX/bX9m/26B
        aP9tgWr/bYJq/26Ca/9vg2z/cYVu/3KGb/9yhm//coZv/3GEbf9ugWj/a35l/2p9ZP9re2P/anpi/2p3
        Xf9ndFr/Z3FY/2t8af9oeGb/dIh1/3KFcf9sfmj/aHpi/2h6Y/9ld2D/ZXdg/2d5Yv9rfWb/bX9o/2x/
        aP9tgGn/boFq/26Ca/9ugmv/boJr/26CbP9vg2z/cIRt/3GFb/9xhW7/b4Ns/26Baf9rfmb/an1k/2p6
        Yv9qeGD/aHVb/2VxV/9lblT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>